Hibernate JPA

Version:
3.5.0-Final

Overview
The goal is to have hibernate as a JPA provider available to a GlassFish Application Server instance. After this module is successfully installed you can use Hibernate as a persistence provider for your JPA applications 

Post Installation

Module Install Directory: <GlassFish Root>/lib
Getting Started: Please refer to instructions below to start using Hibernate as persistence provider


When you install this module, following jars will be copied to your <GlassFish_Root>/lib directory. 

* antlr-2.7.6.jar 
* commons-collections-3.1.jar 
* dom4j-1.6.1.jar 
* hibernate3.jar 
* javassist-3.9.0.GA.jar 
* slf4j-api-1.5.8.jar 
* slf4j-jdk14-1.5.8.jar 

Here are some FAQs

What do I need to do to start using Hibernate as your JPA provider? 
  By default GlassFish uses EclipseLink as the persistence provider for JPA. Please modify persistence.xml of your JPA application to use "org.hibernate.ejb.HibernatePersistence" as the provider. 
  Here is how a sample persistence.xml will look. 
  
  <persistence xmlns="http://java.sun.com/xml/ns/persistence" version="1.0">
      <persistence-unit name ="..." transaction-type = "...">
          <provider>org.hibernate.ejb.HibernatePersistence</provider>
          ...
          ...
      </persistence-unit>
  </persistence>

How do I turn on SQL logging for hibernate ? 
  You need to add property "hibernate.show_sql" with value "true" in your persistence.xml 
  Here is how a sample persistence.xml will look. 

  <persistence xmlns="http://java.sun.com/xml/ns/persistence" version="1.0">
      <persistence-unit name ="..." transaction-type = "...">
          <provider>org.hibernate.ejb.HibernatePersistence</provider>
          ...
          ...
          <properties>
            <property name="hibernate.show_sql" value="true"/>
          </properties>
          ...
          ...
      </persistence-unit>
  </persistence>
How do I turn on schema generation when using hibernate as JPA provider? 
  You need to add property "hibernate.hbm2ddl.auto" with value "true" in your persistence.xml 
  Here is how a sample persistence.xml will look: 

  <persistence xmlns="http://java.sun.com/xml/ns/persistence" version="1.0">
      <persistence-unit name ="..." transaction-type = "...">
          <provider>org.hibernate.ejb.HibernatePersistence</provider>
          ...
          ...
          <properties>
            <property name="hibernate.hbm2ddl.auto" value="true"/> 
          </properties>
          ...
          ...
      </persistence-unit>
  </persistence>
How do I control logging level for hibernate? 
  Hibernate uses slf4j for logging. This update ships with the JDK logging adaptor for slf4j. Which will use JDK loggers for Hibernate. The log output of hibernate is available in server.log for current domain. 
  You can configure log level of hibernate using same mechanism as any other jdk logger - which is to add property "org.hibernate" with desired log level to $DOMAIN_ROOT/config/logging.properties. 
  For example adding following line to logging properties will make all hibernate loggers to log at FINEST level. 
    org.hibernate.level=FINEST
  Please refer to Hibernate documentation for various loggers available. 
  Please refer to documentation of slf4j if you want to configure hibernate to use commons logging or other logging framework. 
