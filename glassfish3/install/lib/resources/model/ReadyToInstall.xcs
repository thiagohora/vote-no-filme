<?xml version="1.0" encoding="utf-8"?>
<!--

   DO NOT ALTER OR REMOVE COPYRIGHT NOTICE OR THIS HEADER.

   Copyright 2006, 2007 Sun Microsystems, Inc. All rights reserved.
   Use is subject to license terms.

   The contents of this file are subject to the terms of the Common Development
   and Distribution License("CDDL") (the "License"). You may not use this file
   except in compliance with the License.

   You can obtain a copy of the License at https://openinstaller.dev.java.net/license.html
   or http://openinstaller.dev.java.net/license.txt . See the License for the
   specific language governing permissions and limitations under the License.

   When distributing the Covered Code, include this CDDL Header Notice in each
   file and include the License file at http://openinstaller.dev.java.net/license.txt .
   If applicable, add the following below this CDDL Header, with the fields
   enclosed by brackets [] replaced by your own identifying information:
   "Portions Copyrighted [year] [name of copyright owner]"

   ident "@(#)%Name% %Revision% %Date% SMI"

-->

<oor:component-schema oor:version="1.1" oor:name="ReadyToInstall" oor:package="org.openinstaller.readytoinstall"
 xsi:schemaLocation="http://openoffice.org/2001/registry"
 xmlns:xs="http://www.w3.org/2001/XMLSchema"
 xmlns:oor="http://openoffice.org/2001/registry"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xml:lang='en-US'>
 <component>
     <group oor:name="readytoinstall">
       <prop oor:name="ONLOAD" oor:type="xs:string" oor:nillable="false">
         <value>foovalueforinstall</value>
         <actions>
           <onSet><![CDATA[
import java.util.List;
import java.util.ArrayList;

import org.openinstaller.bus.BusRequest;
import org.openinstaller.bus.BusResponse;
import org.openinstaller.bus.ControlBus;
import org.openinstaller.util.EnhancedException;
import org.openinstaller.provider.operation.Operation;
import org.openinstaller.provider.operation.ProductMap;
import org.openinstaller.provider.operation.Operation.OPTYPE;
import org.openinstaller.provider.operation.OpsControl;
import org.openinstaller.provider.operation.OperationImpossibleException;
import org.openinstaller.provider.conf.ConfigHelper;

public static java.util.List gOperations = null;

run() {
  /* Get Install Home */
  String INSTALLHOME_DATAPATH = "InstallHome.directory.INSTALL_HOME";
  String theInstallHome = (String) ConfigHelper.getValue(INSTALLHOME_DATAPATH);

  /* Retrieve the Product Map */
  OpsControl theOpsCmd = new OpsControl(OpsControl.OpsCommand.GET_PRODUCT_MAP, theInstallHome);
  BusResponse theProdMapResp = bus.publishRequest(
      new BusRequest("ProductMapRequest", theOpsCmd), "svc://general/operation");

  if (theProdMapResp == null) {
    throw new EnhancedException("CANNOT_CREATE_PRODUCT_MAP", new String [] {});
  } else if (theProdMapResp.getException() != null) {
    throw new EnhancedException("CANNOT_CREATE_PRODUCT_MAP", theProdMapResp.getException(), new String[]{});
  }

  ProductMap theProdMap = (ProductMap) theProdMapResp.getResult();
  if (theProdMap == null) {
    throw new EnhancedException("CANNOT_CREATE_PRODUCT_MAP", new String [] {});
  }

  OpsControl theOpsCtrl = new OpsControl(OpsControl.OpsCommand.PERFORM, theProdMap);
  BusResponse theBR = bus.publishRequest(new BusRequest("OperationRequest", theOpsCtrl), "svc://general/operation");
  gOperations = (java.util.List ) theBR.getResult();
  ((BusResponse)Scripting.getInterpreter().get("gSharedResponse")).setMore(false);
}

return (Runnable)this;
             ]]></onSet>
         </actions>
       </prop>

     </group>
 </component>
</oor:component-schema>
